# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/anaconda?view=azure-devops&tabs=ubuntu-16-04

trigger:
- master
- dev/*

jobs:
- job:
  displayName: ubuntu-16.04
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      #Python27:
      #  python.version: '2.7'
      Python36:
        python.version: '3.6'

  steps:
  - bash: |
      echo "cat /etc/os-release: " $(cat /etc/os-release | grep "VERSION=")
      echo "whoami: " `whoami`     
      echo "which docker: " $(which docker)      
      echo "which conda: " $(which conda)      
      echo "which apt: " $(which apt)      
      echo "apt --version: " $(apt --version)      
      echo "CONDA: " $CONDA
      echo "docker: " $(docker --version)      
      echo "conda: " $(conda --version)      
      echo "HOME: " $HOME
      ls -al ~

      echo "ls -al ~/work:"
      ls -al ~/work

      echo "ls -al ~/work/l:"
      ls -al ~/work/l

      echo "ls -al ~/work/l/s:"
      ls -al ~/work/l/s

      echo "PWD: " $PWD
      echo "ls -al"     
      ls -al

      docker images
      
    displayName: Show system info

  - bash: |
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
      echo "Agent.BuildDirectory: " ${Agent.BuildDirectory}
      echo "Agent.HomeDirectory: " ${Agent.HomeDirectory}
      echo "Agent.Id: " ${Agent.Id}
      echo "Agent.JobName: " ${Agent.JobName}
      echo "Agent.JobStatus: " ${Agent.JobStatus}
      echo "Agent.MachineName: " ${Agent.MachineName}
      echo "Agent.Name: " ${Agent.Name}
      echo "Agent.OS: " ${Agent.OS}
      
      echo "Agent.OSArchitecture: " ${Agent.OSArchitecture}
      echo "Agent.TempDirectory: " ${Agent.TempDirectory}
      echo "Agent.ToolsDirectory: " ${Agent.ToolsDirectory}
      echo "Agent.WorkFolder: " ${Agent.WorkFolder}
      
    displayName: Display Agent variable

  - bash: |
      echo "Build.ArtifactStagingDirectory: " ${Build.ArtifactStagingDirectory}
      echo "Build.BuildId: " ${Build.BuildId}
      echo "Build.BuildNumber: " ${Build.BuildNumber}
      echo "Build.BuildUri: " ${Build.BuildUri}
      echo "Build.BinariesDirectory: " ${Build.BinariesDirectory}
      echo "Build.DefinitionName: " ${Build.DefinitionName}
      echo "Build.DefinitionVersion: " ${Build.DefinitionVersion}
      echo "Build.QueuedBy: " ${Build.QueuedBy}
      echo "Build.QueuedById: " ${Build.QueuedById}
      echo "Build.Reason: " ${Build.Reason}
      echo "Build.Repository.Clean: " ${Build.Repository.Clean}
      echo "Build.Repository.LocalPath: " ${Build.Repository.LocalPath}
      echo "Build.Repository.ID: " ${Build.Repository.ID}
      echo "Build.Repository.Name: " ${Build.Repository.Name}
      echo "Build.Repository.Provider: " ${Build.Repository.Provider}
      echo "Build.Repository.Tfvc.Workspace: " ${Build.Repository.Tfvc.Workspace}
      echo "Build.Repository.Uri: " ${Build.Repository.Uri}
      echo "Build.RequestedFor: " ${Build.RequestedFor}
      echo "Build.RequestedForEmail: " ${Build.RequestedForEmail}
      echo "Build.RequestedForId: " ${Build.RequestedForId}
      echo "Build.SourceBranch: " ${Build.SourceBranch}
      echo "Build.SourceBranchName: " ${Build.SourceBranchName}

    displayName: Display Build variables

  # https://mohitgoyal.co/2019/06/23/print-all-environment-variables-in-azure-devops-across-microsoft-hosted-agents/
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'env | sort'
    
    displayName: env | sort

  - bash: |
      echo "1-PATH: $PATH"
      echo "2-PYTHONPATH: $PYTHONPATH"

      echo "##vso[task.prependpath]$CONDA/bin"

      echo "3-PATH: $PATH"
      echo "4-PYTHONPATH: $PYTHONPATH"
    displayName: Add conda to PATH

  - bash: conda create --yes --quiet --name my_env
    displayName: Create Anaconda environment

  - bash: |
      conda env list
      echo "source activate my_env"
      source activate my_env
      conda env list
      conda install --yes --quiet --name my_env python=$PYTHON_VERSION numpy
    displayName: Install Anaconda packages

  - bash: |
      conda env list
      echo "source activate my_env"
      source activate my_env
      conda env list
      pip install pytest pytest-azurepipelines
      pytest
    displayName: pytest


# - job:
#   displayName: From environment.yml
#   pool:
#     vmImage: 'ubuntu-16.04'
# 
#   steps:
#   - bash: echo "##vso[task.prependpath]$CONDA/bin"
#     displayName: Add conda to PATH
# 
#   - script: conda env create --quiet --file environment.yml
#     displayName: Create Anaconda environment
# 
#   - bash: |
#       source activate env-from-yaml
#       pip install pytest pytest-azurepipelines
#       pytest
#     displayName: pytest